{"version":3,"sources":["Components/CoreComponent.module.scss","Components/Question1.tsx","Components/Subtract.tsx","Components/Multiply.tsx","Components/Divide.tsx","App.tsx","reportWebVitals.ts","index.tsx","Main.module.scss"],"names":["module","exports","Question1","setStatus","useState","Question","Answer","qsstate","setqssstate","x","Math","floor","random","y","number","setNumber","displayer","setDisplayer","nextQuestion","points","useEffect","optionsObject","a","b","c","d","correctAnswerPosition","console","log","property","previous","className","QuestionCSS","button","onClick","Page","ScoreCard","wording","buttondiv","replayContainer","replay","Subtract","Multiply","Divide","array","selection","length","App","status","val","useRef","startGame","ops","current","Main","questionType","operatordiv","startbutton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df6a9ecf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"CoreComponent_Page__3U7g_\",\"wording\":\"CoreComponent_wording__3-2Aa\",\"ScoreCard\":\"CoreComponent_ScoreCard__NSpUV\",\"buttondiv\":\"CoreComponent_buttondiv__1hHni\",\"button\":\"CoreComponent_button__1WBTn\",\"replayContainer\":\"CoreComponent_replayContainer__y2RBP\",\"replay\":\"CoreComponent_replay__1aNYs\"};","import React, { useEffect, useRef, useState } from \"react\";\r\nimport QuestionCSS from \"./CoreComponent.module.scss\";\r\ninterface TrackerInt {\r\n  Question: number;\r\n  Answer: number;\r\n}\r\ninterface IOptions {\r\n  a: number;\r\n  b: number;\r\n  c: number;\r\n  d: number;\r\n}\r\ninterface Inumber {\r\n  x: number;\r\n  y: number;\r\n}\r\ninterface Iproperator {\r\n  setStatus: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst Question1 = ({ setStatus }: Iproperator): JSX.Element => {\r\n  const [qsstate, setqssstate] = useState<TrackerInt>({ Question: 1, Answer: 0 });\r\n  const [number, setNumber] = useState<Inumber>({\r\n    x: Math.floor(Math.random() * 20),\r\n    y: Math.floor(Math.random() * 20),\r\n  });\r\n  const [displayer, setDisplayer] = useState<JSX.Element[]>([]);\r\n\r\n  useEffect(answerQuestion, [number]);\r\n  function nextQuestion(points: number): void {\r\n    setqssstate({ Question: qsstate.Question + 1, Answer: qsstate.Answer + points });\r\n    setNumber({ x: Math.floor(Math.random() * 20), y: Math.floor(Math.random() * 20) });\r\n  }\r\n\r\n  function answerQuestion() {\r\n    if (qsstate.Question > 10) {\r\n      setDisplayer([]);\r\n    } else {\r\n      setDisplayer([]);\r\n      const optionsObject: IOptions = { a: 0, b: 1, c: 2, d: 3 };\r\n      const correctAnswerPosition: number = Math.floor(Math.random() * 4);\r\n      switch (correctAnswerPosition) {\r\n        case 0:\r\n          optionsObject.a = number.x + number.y;\r\n          optionsObject.b = number.x + number.y + Math.floor(Math.random() * 4 + 3); // 3-6 add no overlap\r\n          optionsObject.c = number.x + number.y + Math.floor(Math.random() * 2 + 1); //1-2 add no overlap\r\n          optionsObject.d = number.x + number.y - Math.floor(Math.random() * 2 + 1); //1-2 sub no overlap\r\n          break;\r\n        case 1:\r\n          optionsObject.b = number.x + number.y;\r\n          optionsObject.d = number.x + number.y + Math.floor(Math.random() * 4 + 3);\r\n          optionsObject.c = number.x + number.y + Math.floor(Math.random() * 2 + 1);\r\n          optionsObject.a = number.x + number.y - Math.floor(Math.random() * 2 + 1);\r\n          break;\r\n        case 2:\r\n          optionsObject.c = number.x + number.y;\r\n          optionsObject.a = number.x + number.y + Math.floor(Math.random() * 4 + 3);\r\n          optionsObject.d = number.x + number.y - Math.floor(Math.random() * 2 + 1);\r\n          optionsObject.b = number.x + number.y + Math.floor(Math.random() * 2 + 1);\r\n          break;\r\n        case 3:\r\n          optionsObject.d = number.x + number.y;\r\n          optionsObject.c = number.x + number.y + Math.floor(Math.random() * 4 + 3);\r\n          optionsObject.a = number.x + number.y - Math.floor(Math.random() * 2 + 1);\r\n          optionsObject.b = number.x + number.y + Math.floor(Math.random() * 2 + 1);\r\n          break;\r\n      }\r\n      console.log(correctAnswerPosition, optionsObject);\r\n      for (let property in optionsObject) {\r\n        if (optionsObject[property as keyof IOptions] === number.x + number.y) {\r\n          setDisplayer((previous) => [\r\n            ...previous,\r\n            <button\r\n              key={optionsObject[property as keyof IOptions]}\r\n              className={QuestionCSS.button}\r\n              onClick={() => nextQuestion(1)}>\r\n              {optionsObject[property as keyof IOptions]}\r\n            </button>,\r\n          ]);\r\n        } else {\r\n          setDisplayer((previous) => [\r\n            ...previous,\r\n            <button\r\n              key={optionsObject[property as keyof IOptions]}\r\n              className={QuestionCSS.button}\r\n              onClick={() => nextQuestion(0)}>\r\n              {optionsObject[property as keyof IOptions]}\r\n            </button>,\r\n          ]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={QuestionCSS.Page}>\r\n      <div className={QuestionCSS.ScoreCard}>POINTS: {qsstate.Answer * 10}</div>\r\n\r\n      {qsstate.Question <= 10 ? (\r\n        <div>\r\n          <div className={QuestionCSS.wording}>Question: {qsstate.Question} of 10</div>\r\n          <div className={QuestionCSS.wording}>\r\n            What is {number.x} + {number.y}?\r\n          </div>\r\n\r\n          <div className={QuestionCSS.wording}>Click on the correct answer :</div>\r\n          <div className={QuestionCSS.buttondiv}>{displayer}</div>\r\n          <div className={QuestionCSS.replayContainer}>\r\n            <button className={QuestionCSS.replay} onClick={() => setStatus(false)}>\r\n              Back to selection\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {qsstate.Question > 10 && (\r\n        <div className={QuestionCSS.wording}>\r\n          You scored {`${qsstate.Answer} out of 10`}\r\n          <div>Do you want to play again?</div>\r\n          <button className={QuestionCSS.replay} onClick={() => setStatus(false)}>\r\n            Play Again\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question1;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport QuestionCSS from \"./CoreComponent.module.scss\";\r\ninterface TrackerInt {\r\n  Question: number;\r\n  Answer: number;\r\n}\r\ninterface IOptions {\r\n  a: number;\r\n  b: number;\r\n  c: number;\r\n  d: number;\r\n}\r\ninterface Inumber {\r\n  x: number;\r\n  y: number;\r\n}\r\ninterface Iproperator {\r\n  setStatus: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst Subtract = ({ setStatus }: Iproperator): JSX.Element => {\r\n  const [qsstate, setqssstate] = useState<TrackerInt>({ Question: 1, Answer: 0 });\r\n  const [number, setNumber] = useState<Inumber>({\r\n    x: Math.floor(Math.random() * 30 + 10),\r\n    y: Math.floor(Math.random() * 10),\r\n  });\r\n  const [displayer, setDisplayer] = useState<JSX.Element[]>([]);\r\n\r\n  useEffect(answerQuestion, [number]);\r\n  function nextQuestion(points: number): void {\r\n    setqssstate({ Question: qsstate.Question + 1, Answer: qsstate.Answer + points });\r\n    setNumber({ x: Math.floor(Math.random() * 30 + 10), y: Math.floor(Math.random() * 10) });\r\n  }\r\n\r\n  function answerQuestion() {\r\n    if (qsstate.Question > 10) {\r\n      setDisplayer([]);\r\n    } else {\r\n      setDisplayer([]);\r\n      const optionsObject: IOptions = { a: 0, b: 1, c: 2, d: 3 };\r\n      const correctAnswerPosition: number = Math.floor(Math.random() * 4);\r\n      switch (correctAnswerPosition) {\r\n        case 0:\r\n          optionsObject.a = number.x - number.y;\r\n          optionsObject.b = number.x - number.y + Math.floor(Math.random() * 4 + 3); // add 3-6 add no overlap\r\n          optionsObject.c = number.x - number.y + Math.floor(Math.random() * 2 + 1); //1-2 add no overlap\r\n          optionsObject.d = number.x - number.y - Math.floor(Math.random() * 2 + 1); //1-2 sub no overlap\r\n          break;\r\n        case 1:\r\n          optionsObject.b = number.x - number.y;\r\n          optionsObject.d = number.x - number.y - Math.floor(Math.random() * 4 + 3);\r\n          optionsObject.c = number.x - number.y + Math.floor(Math.random() * 2 + 1);\r\n          optionsObject.a = number.x - number.y - Math.floor(Math.random() * 2 + 1);\r\n          break;\r\n        case 2:\r\n          optionsObject.c = number.x - number.y;\r\n          optionsObject.a = number.x - number.y - Math.floor(Math.random() * 4 + 3);\r\n          optionsObject.d = number.x - number.y - Math.floor(Math.random() * 7 + 10);\r\n          optionsObject.b = number.x - number.y - Math.floor(Math.random() * 2 + 1);\r\n          break;\r\n        case 3:\r\n          optionsObject.d = number.x - number.y;\r\n          optionsObject.c = number.x - number.y + Math.floor(Math.random() * 3 + 3); //3 - 5\r\n          optionsObject.a = number.x - number.y + Math.floor(Math.random() * 7 + 6); //6-12\r\n          optionsObject.b = number.x - number.y + Math.floor(Math.random() * 2 + 1); //1 - 2\r\n          break;\r\n      }\r\n      console.log(correctAnswerPosition, optionsObject);\r\n      for (let property in optionsObject) {\r\n        if (optionsObject[property as keyof IOptions] === number.x - number.y) {\r\n          setDisplayer((previous) => [\r\n            ...previous,\r\n            <button\r\n              key={optionsObject[property as keyof IOptions]}\r\n              className={QuestionCSS.button}\r\n              onClick={() => nextQuestion(1)}>\r\n              {optionsObject[property as keyof IOptions]}\r\n            </button>,\r\n          ]);\r\n        } else {\r\n          setDisplayer((previous) => [\r\n            ...previous,\r\n            <button\r\n              key={optionsObject[property as keyof IOptions]}\r\n              className={QuestionCSS.button}\r\n              onClick={() => nextQuestion(0)}>\r\n              {optionsObject[property as keyof IOptions]}\r\n            </button>,\r\n          ]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={QuestionCSS.Page}>\r\n      <div className={QuestionCSS.ScoreCard}>POINTS: {qsstate.Answer * 10}</div>\r\n      {qsstate.Question <= 10 ? (\r\n        <div>\r\n          <div className={QuestionCSS.wording}>Question: {qsstate.Question} of 10</div>\r\n          <div className={QuestionCSS.wording}>\r\n            What is {number.x} - {number.y}?\r\n          </div>\r\n          <div className={QuestionCSS.wording}>Click on the correct answer :</div>\r\n          <div className={QuestionCSS.buttondiv}>{displayer}</div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {qsstate.Question > 10 && (\r\n        <div className={QuestionCSS.wording}>\r\n          You scored {`${qsstate.Answer} out of 10`}\r\n          <div>Do you want to play again?</div>\r\n          <button onClick={() => setStatus(false)}>Play Again</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Subtract;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport QuestionCSS from \"./CoreComponent.module.scss\";\r\ninterface TrackerInt {\r\n  Question: number;\r\n  Answer: number;\r\n}\r\ninterface IOptions {\r\n  a: number;\r\n  b: number;\r\n  c: number;\r\n  d: number;\r\n}\r\ninterface Inumber {\r\n  x: number;\r\n  y: number;\r\n}\r\ninterface Iproperator {\r\n  setStatus: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst Multiply = ({ setStatus }: Iproperator): JSX.Element => {\r\n  const [qsstate, setqssstate] = useState<TrackerInt>({ Question: 1, Answer: 0 });\r\n  const [number, setNumber] = useState<Inumber>({\r\n    x: Math.floor(Math.random() * 11),\r\n    y: Math.floor(Math.random() * 11),\r\n  });\r\n  const [displayer, setDisplayer] = useState<JSX.Element[]>([]);\r\n\r\n  useEffect(answerQuestion, [number]);\r\n  function nextQuestion(points: number): void {\r\n    setqssstate({ Question: qsstate.Question + 1, Answer: qsstate.Answer + points });\r\n    setNumber({ x: Math.floor(Math.random() * 11), y: Math.floor(Math.random() * 11) });\r\n  }\r\n\r\n  function answerQuestion() {\r\n    if (qsstate.Question > 10) {\r\n      setDisplayer([]);\r\n    } else {\r\n      setDisplayer([]);\r\n      const optionsObject: IOptions = { a: 0, b: 1, c: 2, d: 3 };\r\n      const correctAnswerPosition: number = Math.floor(Math.random() * 4);\r\n      switch (correctAnswerPosition) {\r\n        case 0:\r\n          optionsObject.a = number.x * number.y;\r\n          optionsObject.b = number.x * number.y + Math.floor(Math.random() * 4 + 3); // 3-6 add no overlap\r\n          optionsObject.c = number.x * number.y + Math.floor(Math.random() * 2 + 1); //1-2 add no overlap\r\n          optionsObject.d = number.x * number.y + Math.floor(Math.random() * 4 + 7); //7-9 sub no overlap\r\n          break;\r\n        case 1:\r\n          optionsObject.b = number.x * number.y;\r\n          optionsObject.d = number.x * number.y + Math.floor(Math.random() * 4 + 3); //3-6\r\n          optionsObject.c = number.x * number.y + Math.floor(Math.random() * 2 + 1); //1-2\r\n          optionsObject.a = number.x * number.y - Math.floor(Math.random() * 2 + 1); //1-2\r\n          break;\r\n        case 2:\r\n          optionsObject.c = number.x * number.y;\r\n          optionsObject.a = number.x * number.y - Math.floor(Math.random() * 4 + 3); //3-6\r\n          optionsObject.d = number.x * number.y - Math.floor(Math.random() * 2 + 1); //1-2\r\n          optionsObject.b = number.x * number.y - Math.floor(Math.random() * 4 + 7); //7\r\n          break;\r\n        case 3:\r\n          optionsObject.d = number.x * number.y;\r\n          optionsObject.c = number.x * number.y - Math.floor(Math.random() * 4 + 3); //3 - 6\r\n          optionsObject.a = number.x * number.y - Math.floor(Math.random() * 2 + 1); // 1-3\r\n          optionsObject.b = number.x * number.y + Math.floor(Math.random() * 3 + 7); //7 - 8\r\n          break;\r\n      }\r\n      console.log(correctAnswerPosition, optionsObject);\r\n      for (let property in optionsObject) {\r\n        if (optionsObject[property as keyof IOptions] === number.x * number.y) {\r\n          setDisplayer((previous) => [\r\n            ...previous,\r\n            <button\r\n              key={optionsObject[property as keyof IOptions]}\r\n              className={QuestionCSS.button}\r\n              onClick={() => nextQuestion(1)}>\r\n              {optionsObject[property as keyof IOptions]}\r\n            </button>,\r\n          ]);\r\n        } else {\r\n          setDisplayer((previous) => [\r\n            ...previous,\r\n            <button\r\n              key={optionsObject[property as keyof IOptions]}\r\n              className={QuestionCSS.button}\r\n              onClick={() => nextQuestion(0)}>\r\n              {optionsObject[property as keyof IOptions]}\r\n            </button>,\r\n          ]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={QuestionCSS.Page}>\r\n      <div className={QuestionCSS.ScoreCard}>POINTS: {qsstate.Answer * 10}</div>\r\n      {qsstate.Question <= 10 ? (\r\n        <div>\r\n          <div className={QuestionCSS.wording}>Question: {qsstate.Question} of 10</div>\r\n          <div className={QuestionCSS.wording}>\r\n            What is {number.x} x {number.y}?\r\n          </div>\r\n          <div className={QuestionCSS.wording}>Click on the correct answer :</div>\r\n          <div className={QuestionCSS.buttondiv}>{displayer}</div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {qsstate.Question > 10 && (\r\n        <div className={QuestionCSS.wording}>\r\n          You scored {`${qsstate.Answer} out of 10`}\r\n          <div>Do you want to play again?</div>\r\n          <button onClick={() => setStatus(false)}>Play Again</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Multiply;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport QuestionCSS from \"./CoreComponent.module.scss\";\r\ninterface TrackerInt {\r\n  Question: number;\r\n  Answer: number;\r\n}\r\ninterface IOptions {\r\n  a: number;\r\n  b: number;\r\n  c: number;\r\n  d: number;\r\n}\r\ninterface Inumber {\r\n  x: number;\r\n  y: number;\r\n}\r\ninterface Iproperator {\r\n  setStatus: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst Divide = ({ setStatus }: Iproperator): JSX.Element => {\r\n  const array: number[] = [\r\n    10, 1, 12, 1, 10, 5, 10, 2, 20, 2, 20, 5, 16, 4, 18, 9, 100, 50, 45, 9, 80, 8, 12, 6, 4, 2, 25,\r\n    5, 36, 2, 54, 6, 42, 7, 81, 9, 99, 11, 144, 12, 72, 8, 120, 12, 150, 5, 48, 16,\r\n  ];\r\n  const selection: number = Math.floor(Math.random() * (array.length - 2));\r\n  console.log(array[selection]);\r\n  const [qsstate, setqssstate] = useState<TrackerInt>({ Question: 1, Answer: 0 });\r\n  const [number, setNumber] = useState<Inumber>({\r\n    x: selection % 2 === 0 ? array[selection] : array[selection + 1],\r\n    y: selection % 2 === 0 ? array[selection + 1] : array[selection + 2],\r\n  });\r\n  const [displayer, setDisplayer] = useState<JSX.Element[]>([]);\r\n\r\n  useEffect(answerQuestion, [number]);\r\n  function nextQuestion(points: number): void {\r\n    setqssstate({ Question: qsstate.Question + 1, Answer: qsstate.Answer + points });\r\n    setNumber({\r\n      x: selection % 2 === 0 ? array[selection] : array[selection + 1],\r\n      y: selection % 2 === 0 ? array[selection + 1] : array[selection + 2],\r\n    });\r\n  }\r\n\r\n  function answerQuestion() {\r\n    if (qsstate.Question > 10) {\r\n      setDisplayer([]);\r\n    } else {\r\n      setDisplayer([]);\r\n      const optionsObject: IOptions = { a: 0, b: 1, c: 2, d: 3 };\r\n      const correctAnswerPosition: number = Math.floor(Math.random() * 4);\r\n      switch (correctAnswerPosition) {\r\n        case 0:\r\n          optionsObject.a = number.x / number.y;\r\n          optionsObject.b = number.x / number.y + Math.floor(Math.random() * 4 + 3); // 3-6 add no overlap\r\n          optionsObject.c = number.x / number.y + Math.floor(Math.random() * 2 + 1); //1-2 add no overlap\r\n          optionsObject.d = number.x / number.y + Math.floor(Math.random() * 4 + 7); //7-9 sub no overlap\r\n          break;\r\n        case 1:\r\n          optionsObject.b = number.x / number.y;\r\n          optionsObject.d = number.x / number.y + Math.floor(Math.random() * 4 + 3); //3-6\r\n          optionsObject.c = number.x / number.y + Math.floor(Math.random() * 2 + 1); //1-2\r\n          optionsObject.a = number.x / number.y - Math.floor(Math.random() * 2 + 1); //1-2\r\n          break;\r\n        case 2:\r\n          optionsObject.c = number.x / number.y;\r\n          optionsObject.a = number.x / number.y - Math.floor(Math.random() * 4 + 3); //3-6\r\n          optionsObject.d = number.x / number.y - Math.floor(Math.random() * 2 + 1); //1-2\r\n          optionsObject.b = number.x / number.y - Math.floor(Math.random() * 4 + 7); //7\r\n          break;\r\n        case 3:\r\n          optionsObject.d = number.x / number.y;\r\n          optionsObject.c = number.x / number.y - Math.floor(Math.random() * 4 + 3); //3 - 6\r\n          optionsObject.a = number.x / number.y - Math.floor(Math.random() * 3 + 1); // 1-2\r\n          optionsObject.b = number.x / number.y + Math.floor(Math.random() * 3 + 7); //7 - 8\r\n          break;\r\n      }\r\n      for (let property in optionsObject) {\r\n        if (optionsObject[property as keyof IOptions] === number.x / number.y) {\r\n          setDisplayer((previous) => [\r\n            ...previous,\r\n            <button\r\n              key={optionsObject[property as keyof IOptions]}\r\n              className={QuestionCSS.button}\r\n              onClick={() => nextQuestion(1)}>\r\n              {optionsObject[property as keyof IOptions]}\r\n            </button>,\r\n          ]);\r\n        } else {\r\n          setDisplayer((previous) => [\r\n            ...previous,\r\n            <button\r\n              key={optionsObject[property as keyof IOptions]}\r\n              className={QuestionCSS.button}\r\n              onClick={() => nextQuestion(0)}>\r\n              {optionsObject[property as keyof IOptions]}\r\n            </button>,\r\n          ]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={QuestionCSS.Page}>\r\n      <div className={QuestionCSS.ScoreCard}>POINTS: {qsstate.Answer * 10}</div>\r\n      {qsstate.Question <= 10 ? (\r\n        <div>\r\n          <div className={QuestionCSS.wording}>Question: {qsstate.Question} of 10</div>\r\n          <div className={QuestionCSS.wording}>\r\n            What is {number.x} ÷ {number.y}?\r\n          </div>\r\n          <div className={QuestionCSS.wording}>Click on the correct answer :</div>\r\n          <div className={QuestionCSS.buttondiv}>{displayer}</div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {qsstate.Question > 10 && (\r\n        <div className={QuestionCSS.wording}>\r\n          You scored {`${qsstate.Answer} out of 10`}\r\n          <div>Do you want to play again?</div>\r\n          <button onClick={() => setStatus(false)}>Play Again</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Divide;\r\n","import { useRef, useState } from \"react\";\r\nimport Question1 from \"./Components/Question1\";\r\nimport Subtract from \"./Components/Subtract\";\r\nimport Multiply from \"./Components/Multiply\";\r\nimport Divide from \"./Components/Divide\";\r\nimport Main from \"./Main.module.scss\";\r\n\r\nfunction App() {\r\n  const [status, setStatus] = useState<boolean>(false);\r\n  const val = useRef<string | null>(null);\r\n  const startGame = (ops: string): void => {\r\n    val.current = ops;\r\n    setStatus(true);\r\n  };\r\n\r\n  function questionType(): JSX.Element {\r\n    switch (val.current) {\r\n      case \"+\":\r\n        return <Question1 setStatus={setStatus} />;\r\n      case \"-\":\r\n        return <Subtract setStatus={setStatus} />;\r\n      case \"*\":\r\n        return <Multiply setStatus={setStatus} />;\r\n      default:\r\n        return <Divide setStatus={setStatus} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={Main.Main}>\r\n      <h1>Mathematics</h1>\r\n      {!status ? (\r\n        <div className={Main.selection}>\r\n          <h1>What would you like to do today?</h1>\r\n          <div className={Main.operatordiv}>\r\n            <button className={Main.startbutton} onClick={() => startGame(\"+\")}>\r\n              Addition\r\n            </button>\r\n            <button className={Main.startbutton} onClick={() => startGame(\"-\")}>\r\n              Subtraction\r\n            </button>\r\n            <button className={Main.startbutton} onClick={() => startGame(\"*\")}>\r\n              Multiplication\r\n            </button>\r\n            <button className={Main.startbutton} onClick={() => startGame(\"/\")}>\r\n              Division\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        questionType()\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./Global.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__11bhT\",\"operatordiv\":\"Main_operatordiv__1p6Zx\",\"selection\":\"Main_selection__NeNGF\",\"startbutton\":\"Main_startbutton__2ppAJ\"};"],"sourceRoot":""}