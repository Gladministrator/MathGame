{"version":3,"sources":["Components/Question1.tsx","App.tsx","reportWebVitals.ts","index.tsx","Components/CoreComponent.module.scss","Main.module.scss"],"names":["Question1","useState","Question","Answer","qsstate","setqssstate","x","Math","floor","random","y","number","setNumber","displayer","setDisplayer","nextQuestion","points","useEffect","optionsObject","a","b","c","d","correctAnswerPosition","console","log","property","previous","onClick","className","QuestionCSS","Page","ScoreCard","App","status","setStatus","startGame","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a1ce7e0a.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport QuestionCSS from \"./CoreComponent.module.scss\";\r\ninterface TrackerInt {\r\n  Question: number;\r\n  Answer: number;\r\n}\r\ninterface IOptions {\r\n  a: number;\r\n  b: number;\r\n  c: number;\r\n  d: number;\r\n}\r\ninterface Inumber {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nconst Question1: React.FC = (): JSX.Element => {\r\n  const [qsstate, setqssstate] = useState<TrackerInt>({ Question: 1, Answer: 0 });\r\n  const [number, setNumber] = useState<Inumber>({\r\n    x: Math.floor(Math.random() * 20),\r\n    y: Math.floor(Math.random() * 20),\r\n  });\r\n  const [displayer, setDisplayer] = useState<JSX.Element[]>([]);\r\n\r\n  useEffect(answerQuestion, [number]);\r\n  function nextQuestion(points: number): void {\r\n    setqssstate({ Question: qsstate.Question + 1, Answer: qsstate.Answer + points });\r\n    setNumber({ x: Math.floor(Math.random() * 20), y: Math.floor(Math.random() * 20) });\r\n  }\r\n\r\n  function answerQuestion() {\r\n    if (qsstate.Question > 10) {\r\n      setDisplayer([]);\r\n    } else {\r\n      setDisplayer([]);\r\n      const optionsObject: any = { a: 0, b: 1, c: 2, d: 3 };\r\n      const correctAnswerPosition: number = Math.floor(Math.random() * 4);\r\n      switch (correctAnswerPosition) {\r\n        case 0:\r\n          optionsObject.a = number.x + number.y;\r\n          optionsObject.b = number.x + number.y + Math.floor(Math.random() * 4 + 3); // 3-6 add no overlap\r\n          optionsObject.c = number.x + number.y + Math.floor(Math.random() * 2 + 1); //0-2 add no overlap\r\n          optionsObject.d = number.x + number.y - Math.floor(Math.random() * 2 + 1); //1-2 sub no overlap\r\n          break;\r\n        case 1:\r\n          optionsObject.b = number.x + number.y;\r\n          optionsObject.d = number.x + number.y + Math.floor(Math.random() * 4 + 3);\r\n          optionsObject.c = number.x + number.y + Math.floor(Math.random() * 2 + 1);\r\n          optionsObject.a = number.x + number.y - Math.floor(Math.random() * 2 + 1);\r\n          break;\r\n        case 2:\r\n          optionsObject.c = number.x + number.y;\r\n          optionsObject.a = number.x + number.y + Math.floor(Math.random() * 4 + 3);\r\n          optionsObject.d = number.x + number.y - Math.floor(Math.random() * 2 + 1);\r\n          optionsObject.b = number.x + number.y + Math.floor(Math.random() * 2 + 1);\r\n          break;\r\n        case 3:\r\n          optionsObject.d = number.x + number.y;\r\n          optionsObject.c = number.x + number.y + Math.floor(Math.random() * 4 + 3);\r\n          optionsObject.a = number.x + number.y - Math.floor(Math.random() * 2 + 1);\r\n          optionsObject.b = number.x + number.y + Math.floor(Math.random() * 2 + 1);\r\n          break;\r\n      }\r\n      console.log(correctAnswerPosition, optionsObject);\r\n      for (let property in optionsObject) {\r\n        if (optionsObject[property] === number.x + number.y) {\r\n          setDisplayer((previous) => [\r\n            ...previous,\r\n            <button key={optionsObject[property]} onClick={() => nextQuestion(1)}>\r\n              {optionsObject[property]}\r\n            </button>,\r\n          ]);\r\n        } else {\r\n          setDisplayer((previous) => [\r\n            ...previous,\r\n            <button key={optionsObject[property]} onClick={() => nextQuestion(0)}>\r\n              {optionsObject[property]}\r\n            </button>,\r\n          ]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={QuestionCSS.Page}>\r\n      <div className={QuestionCSS.ScoreCard}>POINTS: {qsstate.Answer * 10}</div>\r\n      {qsstate.Question <= 10 ? (\r\n        <div>\r\n          <div>Question: {qsstate.Question} of 10</div>\r\n          <div>\r\n            What is {number.x} + {number.y}?\r\n          </div>\r\n          <div>Click on the correct answer :</div>\r\n          <div>{displayer}</div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {qsstate.Question > 10 ? <div>You scored {`${qsstate.Answer} out of 10`}</div> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question1;\r\n","import { useState } from \"react\";\r\nimport Question1 from \"./Components/Question1\";\r\nimport Main from \"./Main.module.scss\";\r\n\r\nfunction App() {\r\n  interface TrackerInt {\r\n    Question: number;\r\n    Answer: number;\r\n  }\r\n  const [status, setStatus] = useState<boolean>(false);\r\n  const [tracker, setTracker] = useState<TrackerInt>({ Question: 1, Answer: 0 });\r\n\r\n  const startGame = (): void => {\r\n    return setStatus(true);\r\n  };\r\n\r\n  const [Card, setCard] = useState<JSX.Element>(<button onClick={startGame}>START GAME</button>);\r\n\r\n  //we need a start game button\r\n  //asks 10 questions\r\n  //multiple choice 4\r\n  //click answer\r\n  //\r\n\r\n  return (\r\n    <div className={Main.Main}>\r\n      <h1>Let's play a math game!</h1>\r\n      {!status ? <button onClick={startGame}>START GAME</button> : <Question1 />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"CoreComponent_Page__4FdDE\",\"ScoreCard\":\"CoreComponent_ScoreCard__Ia2tC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__13scv\"};"],"sourceRoot":""}